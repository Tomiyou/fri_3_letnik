#typ tretjiTip = ^drugiTip
#typ drugiTip = prviTip
#typ prviTip = void

#typ mojStruct1 = { field1 : char, field2 : integer, field3 : boolean, mojVoid: ^char }
#typ mojStruct2 = { ff1 : char, ff2 : integer, ff3 : boolean, mojPtr: mojStruct1 }
#typ mojArray = integer[10]
#typ lelele = tretjiTip[10][5 * 12][7]

#var test : integer
#var topkek : integer[19]

fun exit():void = none
fun putChar(c:char):void = none
fun getChar():char = (0:char)

fun putInteger(i:integer):void =
    {
      if (i<0) then { putChar('-'); i=-i; } else none;
      if (i==0) then putChar('0') else put(i);
    }
    where
    {
      fun put(i:integer):void =
          {
            if (i==0) then none else {
              put(i/10);
              putChar(((i%10+('0':integer)):char));
            };
          }
    }

fun getInteger():integer =
    {
      sign=1;
      val=0;
      c = getChar();
      if (c=='+') then { sign=+1; c='0'; } else
      if (c=='-') then { sign=-1; c='0'; } else
      if (c<'0')|(c>'9') then exit() else none;
      while ('0'<=c)&(c<='9') do {
        val=val*10+((c:integer)-('0':integer));
        c=getChar();
      };
      if (c!=(10:char)) then exit() else none;
      sign * val;
    }
    where
    {
      var sign:integer
      var val:integer
      var c:char
    }

fun putString(s:^char):void =
    {
      i=0;
      while (((s:integer)+(i*8):^char)^!=(0:char)) do {
        putChar(((s:integer)+(i*8):^char)^);
        i=i+1;
      };
      none;
    }
    where
    {
      var i:integer
    }

#---------------------------------------------------------------

fun main():integer =
    {
      n=5;
      {
        #putString("N var: ");
        #putInteger(n);
        #putChar((10:char));
        #putChar((10:char));

        i=0;
        while i<n do {
          #putInteger(i);
          #putChar((10:char));

          ns[i]=i;

          #putString("- N var: ");
          #putInteger(n);
          #putChar((10:char));
          #putString("+ NS var: ");
          #putInteger(ns[i]);
          #putChar((10:char));
          #putChar((10:char));

          i=i+1;
        };

        #putString("I var: ");
        #putInteger(i);
        #putChar((10:char));

        #putString("N var: ");
        #putInteger(n);
        #putChar((10:char));

      } where { var i:integer };
      #combs(0,n,^ns);
      0;
    }
    where
    {
      var n:integer
      var ns:integer[32]
    }


#fun main(): char = {
#  xx = ^topkek[5];
#  xx^ = 23;
#  hh.mojPtr.field2 = kkkkkk(7, ^topkek[5]) + kkkkkk(10, ^topkek[5]);
#  hh.mojPtr.field2 = hh.mojPtr.field2 * 20 + 3;
#  (hh.mojPtr.field2:char);
#} where {
#  var yy : integer
#  var xx : ^integer
#
#  var hh : mojStruct2
#}

#fun main(): integer = {
#  xx = ^topkek[5];
#  xx^ = 10;
#  topkek[5];
#} where {
#  var yy : integer
#  var xx : ^integer
#}

#fun kkkkkk(cc: integer, ll: ^integer): integer = {
#  bb.ff1 = 12 % cc;
#  bb.ff1 = bb.ff1 + ll^;
#  bb.ff1 - 2;
#} where {
#  typ mojStruct2 = { ff1 : integer, ff2 : boolean, ff3 : boolean, mojPtr: ^void }
#  var bb : mojStruct2
#}













# note bois:
# - a lohk uporablaš pointer na nekej predn sploh inicializiraš ta nekej